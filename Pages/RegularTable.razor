@inject ProtectedSessionStorage ProtectedSessionStore



<div style="@visible">
    @ChildContent
</div>

@code {
    public string visible = " display: block;";
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public int subdeparmentID { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Console.WriteLine(subdeparmentID);
        var result = await ProtectedSessionStore.GetAsync<int>("subdepartment");
        if (result.Success)
        {
            int tmp_subdepartment = result.Value;
            Console.WriteLine("My Department" + tmp_subdepartment);
            Console.WriteLine("The Department" + subdeparmentID);
            //int subDep =  Int32.Parse(tmp_subdepartment);

            if (tmp_subdepartment == subdeparmentID)
            {
                var resultRole = await ProtectedSessionStore.GetAsync<string>("role");

                if (resultRole.Success)
                {
                    string role = resultRole.Value!.ToString();
                    Console.Write("\n" + role + "\n");
                    switch (role)
                    {
                        case "ADMIN":
                            visible = "display:none;";
                            break;
                        default:
                            break;

                    }

                }
            }
            else
            {
                visible = "display:none;";
            }

        }

    }

}